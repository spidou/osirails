<% content_for :header do %>
  <%= stylesheet_link_tag_with_theme_support 'core/has_address/has_address' %>
<% end %>

<%# fields_for "customer[establishment_attributes][][address_attributes]", address do |form| %>
<%
address_owner_class ||= nil
address = address_form
owner_type = address_owner_class || address_owner.class.singularized_table_name
force_show_view ||= false

#FIXME remove this test block accessor when the fields_for method could received params like "customer[establishment_attributes][][address_attributes]"
if address_owner.class.one_or_many == :many
  options = { :index => nil }
else
  options = {}
end

identifier = generate_random_id
%>
<div class="address">
  <% fields_for "#{owner_type}[#{address.has_address_key}_attributes]", address do |form| %>
    <% form.force_show_view = force_show_view %>
    
    <p>
      <p class="contain_auto_completer">
        <%= form.label :street_name, nil, options.merge(:required => :required) %>
        <%= form.form_or_view(form.text_area_autoresize(:street_name, options.merge(:class => "street_name")), :street_name) %>
      </p>
    </p>
    
    <% if form.form_view? %>
      <p class="contain_auto_completer">
        <%= form.label :zip_code, nil, options.merge(:required => :required) %>
        <%= custom_text_field_with_auto_complete_for_city_zip_code(address, identifier, form, options) %>
        
        <%= form.label :city_name, nil, options.merge(:class => :city_label, :required => :required) %>
        <%= custom_text_field_with_auto_complete_for_city_name(address, identifier, form, options) %>
      </p>
      <p class="contain_auto_completer">
        <%= form.label :region_name, nil, options %>
        <%= custom_text_field_with_auto_complete_for_region_name(address, identifier, form, options) %>
      </p>
      <p class="contain_auto_completer">
        <%= form.label :country_name, nil, options.merge(:required => :required) %>
        <%= custom_text_field_with_auto_complete_for_country_name(address, identifier, form, options) %>
      </p>
    <% else %>
      <p>
        <%= simple_label :address, :zip_code %>
        <%= form.strong :zip_code %>
        
        <%= simple_label :address, :city_name, :class => :city_label %>
        <%= form.strong :city_name %>
      </p>
      <% unless address.region_name.blank? %>
        <p>
          <%= simple_label :address, :region_name %>
          <%= form.strong :region_name %>
        </p>
      <% end %>
      <p>
        <%= simple_label :address, :country_name %>
        <%= form.strong :country_name %>
      </p>
    <% end %>
    
    <div style="display:none;">
      <% #OPTIMIZE the herein hidden fields would not be exists if the fields_for command accept argument like 'customer[establishment_attributes][][address_attributes]' %>
      <% if form.form_view? %>
        <%= form.hidden_field :id, options %>
        <%= form.hidden_field :has_address_id, options %>
        <%= form.hidden_field :has_address_type, options %>
        <%= form.hidden_field :has_address_key, options %>
      <% end %>
    </div>
  <% end %>
</div>
